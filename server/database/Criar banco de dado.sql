/******************************************************************************/
/*            Generated by IBExpert 2023.7.9.1 18/07/2023 17:54:06            */
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES WIN1252;

SET CLIENTLIB 'C:\Program Files (x86)\HK-Software\IBExpert\Firebird3\fbclient.dll';

CREATE DATABASE '127.0.0.1/3050:C:\#DEV\#Projetos\loja\server\database\LOJA-BD.FBD'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 16384
DEFAULT CHARACTER SET WIN1252 COLLATION WIN1252;



/******************************************************************************/
/*                                 Generators                                 */
/******************************************************************************/

CREATE GENERATOR GEN_CAIXA_ID START WITH 0 INCREMENT BY 1;
CREATE GENERATOR GEN_CAIXA_MOVIMENTO_ID START WITH 0 INCREMENT BY 1;
CREATE GENERATOR GEN_ESTOQUE_MOVIMENTO_ID START WITH 0 INCREMENT BY 1;
CREATE GENERATOR GEN_ESTOQUE_SALDO_ID START WITH 0 INCREMENT BY 1;
CREATE GENERATOR GEN_ITEM_ID START WITH 0 INCREMENT BY 1;
CREATE GENERATOR GEN_VENDA_ID START WITH 0 INCREMENT BY 1;


/******************************************************************************/
/*                                   Tables                                   */
/******************************************************************************/



CREATE TABLE CAIXA (
    COD_CAIXA  INTEGER NOT NULL,
    COD_SIT    CHAR(1) NOT NULL,
    DAT_ABERT  TIMESTAMP NOT NULL,
    DAT_FECHA  TIMESTAMP,
    VR_ABERT   NUMERIC(15,2) NOT NULL,
    VR_FECHA   NUMERIC(15,2)
);

CREATE TABLE CAIXA_MOVIMENTO (
    COD_MOV         INTEGER NOT NULL,
    COD_CAIXA       INTEGER NOT NULL,
    COD_TIPO_MOV    CHAR(1) NOT NULL,
    COD_MEIO_PAGTO  CHAR(2) NOT NULL,
    COD_ORIG_MOV    CHAR(2) NOT NULL,
    VR_MOV          NUMERIC(15,2) NOT NULL,
    DAT_MOV         TIMESTAMP NOT NULL,
    DSC_OBS         VARCHAR(60)
);

CREATE TABLE ESTOQUE_MOVIMENTO (
    COD_MOV       INTEGER NOT NULL,
    COD_ITEM      INTEGER NOT NULL,
    QTD_MOV       INTEGER NOT NULL,
    DAT_MOV       TIMESTAMP NOT NULL,
    COD_TIPO_MOV  CHAR(1) NOT NULL,
    COD_ORIG_MOV  CHAR(2) NOT NULL,
    DSC_MOT       VARCHAR(60)
);

CREATE TABLE ESTOQUE_SALDO (
    COD_FECH_SALDO  INTEGER NOT NULL,
    COD_ITEM        INTEGER NOT NULL,
    DAT_SALDO       TIMESTAMP NOT NULL,
    QTD_SALDO       INTEGER NOT NULL
);

CREATE TABLE ITEM (
    COD_ITEM      INTEGER NOT NULL,
    NOM_ITEM      VARCHAR(100),
    NUM_COD_BARR  VARCHAR(14)
);

CREATE TABLE PRECO_VENDA (
    COD_ITEM  INTEGER NOT NULL,
    DAT_INI   TIMESTAMP NOT NULL,
    VR_VNDA   NUMERIC(15,2)
);

CREATE TABLE VENDA (
    NUM_VNDA   INTEGER NOT NULL,
    COD_SIT    CHAR(1) NOT NULL,
    DAT_INCL   TIMESTAMP NOT NULL,
    DAT_CONCL  TIMESTAMP,
    VR_BRUTO   NUMERIC(15,2) NOT NULL,
    VR_DESC    NUMERIC(15,2) NOT NULL,
    VR_TOTAL   NUMERIC(15,2) NOT NULL
);

CREATE TABLE VENDA_ITEM (
    NUM_VNDA       INTEGER NOT NULL,
    NUM_SEQ_ITEM   INTEGER NOT NULL,
    COD_ITEM       INTEGER NOT NULL,
    COD_SIT        CHAR(1) NOT NULL,
    QTD_ITEM       INTEGER NOT NULL,
    VR_PRECO_UNIT  NUMERIC(15,2) NOT NULL,
    VR_BRUTO       NUMERIC(15,2) NOT NULL,
    VR_DESC        NUMERIC(15,2) NOT NULL,
    VR_TOTAL       NUMERIC(15,2) NOT NULL
);

CREATE TABLE VENDA_MEIO_PAGTO (
    NUM_VNDA            INTEGER NOT NULL,
    NUM_SEQ_MEIO_PAGTO  INTEGER NOT NULL,
    COD_MEIO_PAGTO      CHAR(2) NOT NULL,
    QTD_PARC            INTEGER NOT NULL,
    VR_TOTAL            NUMERIC(15,2) NOT NULL
);



/******************************************************************************/
/*                                Primary keys                                */
/******************************************************************************/

ALTER TABLE CAIXA ADD CONSTRAINT PK_CAIXA PRIMARY KEY (COD_CAIXA);
ALTER TABLE CAIXA_MOVIMENTO ADD CONSTRAINT PK_CAIXA_MOVIMENTO PRIMARY KEY (COD_MOV);
ALTER TABLE ESTOQUE_MOVIMENTO ADD CONSTRAINT PK_ESTOQUE_MOVIMENTO PRIMARY KEY (COD_MOV);
ALTER TABLE ESTOQUE_SALDO ADD CONSTRAINT PK_ESTOQUE_SALDO PRIMARY KEY (COD_FECH_SALDO);
ALTER TABLE ITEM ADD CONSTRAINT PK_ITEM PRIMARY KEY (COD_ITEM);
ALTER TABLE PRECO_VENDA ADD CONSTRAINT PK_PRECO_VENDA PRIMARY KEY (COD_ITEM, DAT_INI);
ALTER TABLE VENDA ADD CONSTRAINT PK_VENDA PRIMARY KEY (NUM_VNDA);
ALTER TABLE VENDA_ITEM ADD CONSTRAINT PK_VENDA_ITEM PRIMARY KEY (NUM_VNDA, NUM_SEQ_ITEM);
ALTER TABLE VENDA_MEIO_PAGTO ADD CONSTRAINT PK_VENDA_MEIO_PAGTO PRIMARY KEY (NUM_VNDA, NUM_SEQ_MEIO_PAGTO);


/******************************************************************************/
/*                                Foreign keys                                */
/******************************************************************************/

ALTER TABLE CAIXA_MOVIMENTO ADD CONSTRAINT FK_CAIXA_MOVIMENTO_1 FOREIGN KEY (COD_CAIXA) REFERENCES CAIXA (COD_CAIXA);
ALTER TABLE ESTOQUE_MOVIMENTO ADD CONSTRAINT FK_ESTOQUE_MOVIMENTO_1 FOREIGN KEY (COD_ITEM) REFERENCES ITEM (COD_ITEM);
ALTER TABLE ESTOQUE_SALDO ADD CONSTRAINT FK_ESTOQUE_SALDO_1 FOREIGN KEY (COD_ITEM) REFERENCES ITEM (COD_ITEM);
ALTER TABLE PRECO_VENDA ADD CONSTRAINT FK_PRECO_VENDA_1 FOREIGN KEY (COD_ITEM) REFERENCES ITEM (COD_ITEM);
ALTER TABLE VENDA_ITEM ADD CONSTRAINT FK_VENDA_ITEM_1 FOREIGN KEY (NUM_VNDA) REFERENCES VENDA (NUM_VNDA);
ALTER TABLE VENDA_ITEM ADD CONSTRAINT FK_VENDA_ITEM_2 FOREIGN KEY (COD_ITEM) REFERENCES ITEM (COD_ITEM);
ALTER TABLE VENDA_MEIO_PAGTO ADD CONSTRAINT FK_VENDA_MEIO_PAGTO_1 FOREIGN KEY (NUM_VNDA) REFERENCES VENDA (NUM_VNDA);


/******************************************************************************/
/*                                  Indices                                   */
/******************************************************************************/

CREATE INDEX CAIXA_IDX_COD_SIT ON CAIXA (COD_SIT);


/******************************************************************************/
/*                                  Triggers                                  */
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/*                            Triggers for tables                             */
/******************************************************************************/



/* Trigger: CAIXA_BI */
CREATE TRIGGER CAIXA_BI FOR CAIXA
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.cod_caixa is null) then
    new.cod_caixa = gen_id(gen_caixa_id,1);
end
^

/* Trigger: CAIXA_MOVIMENTO_BI */
CREATE TRIGGER CAIXA_MOVIMENTO_BI FOR CAIXA_MOVIMENTO
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.cod_mov is null) then
    new.cod_mov = gen_id(gen_caixa_movimento_id,1);
end
^

/* Trigger: ESTOQUE_MOVIMENTO_BI */
CREATE TRIGGER ESTOQUE_MOVIMENTO_BI FOR ESTOQUE_MOVIMENTO
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.cod_mov is null) then
    new.cod_mov = gen_id(gen_estoque_movimento_id,1);
end
^

/* Trigger: ESTOQUE_SALDO_BI */
CREATE TRIGGER ESTOQUE_SALDO_BI FOR ESTOQUE_SALDO
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.cod_fech_saldo is null) then
    new.cod_fech_saldo = gen_id(gen_estoque_saldo_id,1);
end
^

/* Trigger: ITEM_BI */
CREATE TRIGGER ITEM_BI FOR ITEM
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.cod_item is null) then
    new.cod_item = gen_id(gen_item_id,1);
end
^

/* Trigger: VENDA_BI */
CREATE TRIGGER VENDA_BI FOR VENDA
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.num_vnda is null) then
    new.num_vnda = gen_id(gen_venda_id,1);
end
^
SET TERM ; ^

